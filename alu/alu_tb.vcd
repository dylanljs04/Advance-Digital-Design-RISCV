$date
	Sat Mar 08 16:17:58 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module alu_tb $end
$var wire 1 ! t_Zero $end
$var wire 1 " t_Negative $end
$var wire 32 # t_ALUResult [31:0] $end
$var reg 5 $ t_ALUControl [4:0] $end
$var reg 32 % t_SrcA [31:0] $end
$var reg 32 & t_SrcB [31:0] $end
$scope module dut $end
$var wire 5 ' ALUControl [4:0] $end
$var wire 32 ( SrcA [31:0] $end
$var wire 32 ) SrcB [31:0] $end
$var wire 1 * zero_buffer $end
$var wire 32 + sltResult [31:0] $end
$var wire 32 , shiftResult [31:0] $end
$var wire 1 - negative_buffer $end
$var wire 32 . logicResult [31:0] $end
$var wire 32 / arithResult [31:0] $end
$var wire 2 0 ALUOp [1:0] $end
$var reg 32 1 ALUResult [31:0] $end
$var reg 1 " Negative $end
$var reg 1 ! Zero $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b111100000000 1
b0 0
b11110100 /
b0 .
0-
b111100000000 ,
b0 +
0*
b100 )
b11110000 (
b0 '
b100 &
b11110000 %
b0 $
b111100000000 #
0"
0!
$end
#5000
1!
1*
b100 .
b0 #
b0 1
b0 ,
b10011 /
b10000 $
b10000 '
b1111 %
b1111 (
#10000
0!
0*
b1 #
b1 1
b1 +
b1 .
b1 0
b11111111111111111111111111111110 ,
b11111111111111111111111111111110 /
b1001 $
b1001 '
b1 &
b1 )
b11111111111111111111111111111111 %
b11111111111111111111111111111111 (
#15000
1!
1*
b0 #
b0 1
b0 +
b0 .
b10100 ,
b11 /
b10 &
b10 )
b101 %
b101 (
#20000
0!
0*
b11 .
b1010 #
b1010 1
b10 0
b111000 ,
b1010 /
b10 $
b10 '
b11 &
b11 )
b111 %
b111 (
#25000
1"
1-
b1 +
b0 .
b11111111111111111111111111111101 #
b11111111111111111111111111111101 1
b10100000000 ,
b11111111111111111111111111111101 /
b1010 $
b1010 '
b1000 &
b1000 )
b101 %
b101 (
#30000
0"
0-
b0 +
b11 #
b11 1
b100000000 ,
b11 /
b101 &
b101 )
b1000 %
b1000 (
#35000
0!
0*
b0 +
b1111000000000000111100000000 .
b1111000000000000111100000000 #
b1111000000000000111100000000 1
b11 0
b1111111100000000000000000000000 ,
b1110000100000000111000001111 /
b11 $
b11 '
b1111000011110000111100001111 &
b1111000011110000111100001111 )
b11111111000000001111111100000000 %
b11111111000000001111111100000000 (
#40000
1"
1-
b11111111111111111111111111110000 #
b11111111111111111111111111110000 1
b11111111111111111111111111110000 .
b11110000111100000000000000000000 ,
b11100000 /
b111 $
b111 '
b1111000011110000111111110000 &
b1111000011110000111111110000 )
b11110000111100001111000011110000 %
b11110000111100001111000011110000 (
#45000
0"
1!
1*
0-
b10000 .
b0 #
b0 1
b10 0
b100000000000000000000 ,
b0 /
b1010 $
b1010 '
b10000 &
b10000 )
b10000 %
b10000 (
#60000
