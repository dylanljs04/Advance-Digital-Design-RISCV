$date
	Sat Mar 08 23:56:37 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module control_unit_tb $end
$var wire 2 ! t_ResultSrc [1:0] $end
$var wire 1 " t_RegWrite $end
$var wire 2 # t_PCSrc [1:0] $end
$var wire 1 $ t_MemWrite $end
$var wire 3 % t_ImmSrc [2:0] $end
$var wire 1 & t_ALUSrc $end
$var wire 5 ' t_ALUControl [4:0] $end
$var reg 32 ( t_Instr [31:0] $end
$var reg 1 ) t_Negative $end
$var reg 1 * t_Zero $end
$scope function display_test $end
$upscope $end
$scope module dut $end
$var wire 32 + Instr [31:0] $end
$var wire 1 ) Negative $end
$var wire 1 * Zero $end
$var wire 7 , opcode [6:0] $end
$var wire 7 - funct7 [6:0] $end
$var wire 3 . funct3 [2:0] $end
$var reg 5 / ALUControl [4:0] $end
$var reg 1 & ALUSrc $end
$var reg 3 0 ImmSrc [2:0] $end
$var reg 1 $ MemWrite $end
$var reg 2 1 PCSrc [1:0] $end
$var reg 1 " RegWrite $end
$var reg 2 2 ResultSrc [1:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
0*
0)
b0 (
b0 '
0&
b0 %
0$
b0 #
0"
b0 !
$end
#5000
b10 '
b10 /
b1 !
b1 2
1"
b110011 ,
b110011 (
b110011 +
#10000
b1010 '
b1010 /
b1 !
b1 2
b100000 -
b1000000000000000000000000110011 (
b1000000000000000000000000110011 +
#15000
b111 '
b111 /
b1 !
b1 2
b110 .
b0 -
b110000000110011 (
b110000000110011 +
#20000
b11 '
b11 /
b1 !
b1 2
b111 .
b111000000110011 (
b111000000110011 +
#25000
b0 '
b0 /
b1 !
b1 2
b1 .
b1000000110011 (
b1000000110011 +
#30000
b1001 '
b1001 /
b1 !
b1 2
b10 .
b10000000110011 (
b10000000110011 +
#35000
b10000 '
b10000 /
b1 !
b1 2
b101 .
b101000000110011 (
b101000000110011 +
#40000
1&
b10 '
b10 /
b1 !
b1 2
b10011 ,
b0 .
b10011 (
b10011 +
#45000
b0 '
b0 /
1&
b1 !
b1 2
b1 .
b1000000010011 (
b1000000010011 +
#50000
b1001 '
b1001 /
1&
b1 !
b1 2
b10 .
b10000000010011 (
b10000000010011 +
#55000
b10000 '
b10000 /
1&
b1 !
b1 2
b101 .
b101000000010011 (
b101000000010011 +
#60000
b111 '
b111 /
1&
b1 !
b1 2
b110 .
b110000000010011 (
b110000000010011 +
#65000
b11 '
b11 /
1&
b1 !
b1 2
b111 .
b111000000010011 (
b111000000010011 +
#70000
b10 '
b10 /
1&
b10 !
b10 2
b11 ,
b0 .
b11 (
b11 +
#75000
1$
b1 %
b1 0
0"
b10 '
b10 /
1&
b0 !
b0 2
b100011 ,
b100011 (
b100011 +
#80000
b1 #
b1 1
b10 %
b10 0
b1010 '
b1010 /
0"
0&
0$
b1100011 ,
1*
b1100011 (
b1100011 +
#85000
b10 %
b10 0
b1010 '
b1010 /
0"
b0 #
b0 1
0*
#90000
b10 %
b10 0
b1010 '
b1010 /
0"
b1 .
1*
b1000001100011 (
b1000001100011 +
#95000
b1 #
b1 1
b10 %
b10 0
b1010 '
b1010 /
0"
0*
#100000
b10 %
b10 0
b1001 '
b1001 /
0"
b1 #
b1 1
b100 .
1)
b100000001100011 (
b100000001100011 +
#105000
b10 %
b10 0
b1001 '
b1001 /
0"
b0 #
b0 1
0)
#110000
b10 %
b10 0
b1001 '
b1001 /
0"
b101 .
1)
b101000001100011 (
b101000001100011 +
#115000
b1 #
b1 1
b10 %
b10 0
b1001 '
b1001 /
0"
0)
#120000
b11 !
b11 2
b100 %
b100 0
b0 '
b0 /
1"
b1 #
b1 1
b1101111 ,
b0 .
b1101111 (
b1101111 +
#125000
b10 '
b10 /
1&
b0 %
b0 0
b11 !
b11 2
b10 #
b10 1
b1100111 ,
b1100111 (
b1100111 +
#130000
b11 %
b11 0
b10 '
b10 /
0&
b0 !
b0 2
b0 #
b0 1
b110111 ,
b110111 (
b110111 +
#135000
0"
b0 %
b0 0
b0 '
b0 /
b0 ,
b0 (
b0 +
#150000
